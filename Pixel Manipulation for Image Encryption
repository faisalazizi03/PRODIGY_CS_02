from PIL import Image
import numpy as np

def encrypt_image(input_image_path, output_image_path, key):
    # Open the image
    image = Image.open(input_image_path)
    pixels = np.array(image)

    # Perform a simple encryption by adding the key to pixel values
    encrypted_pixels = (pixels + key) % 256  # Ensure values stay in valid range
    encrypted_image = Image.fromarray(encrypted_pixels.astype('uint8'))
    
    # Save the encrypted image
    encrypted_image.save(output_image_path)
    print(f"Encrypted image saved as: {output_image_path}")

def decrypt_image(input_image_path, output_image_path, key):
    # Open the encrypted image
    encrypted_image = Image.open(input_image_path)
    encrypted_pixels = np.array(encrypted_image)

    # Decrypt by subtracting the key from pixel values
    decrypted_pixels = (encrypted_pixels - key) % 256  # Ensure values stay in valid range
    decrypted_image = Image.fromarray(decrypted_pixels.astype('uint8'))

    # Save the decrypted image
    decrypted_image.save(output_image_path)
    print(f"Decrypted image saved as: {output_image_path}")

if __name__ == "__main__":
    input_path = "input_image.jpg"  # Path to your input image
    encrypted_path = "encrypted_image.jpg"
    decrypted_path = "decrypted_image.jpg"
    key = 42  # Simple integer key for encryption/decryption

    # Encrypt the image
    encrypt_image(input_path, encrypted_path, key)

    # Decrypt the image
    decrypt_image(encrypted_path, decrypted_path, key)
